# Autogenerated CNC bed leveling

lines = []

def generate_code(x_max, y_max, feedrate,line_width):
    lines.append("G21\n")
    lines.append("G90\n")
    string = "G1 Z0 F250\n"
    lines.append(string)
    for i in range(0, int(y_max/line_width), 1):
        string = "G1 Y" + str(i*line_width) + " F" + str(feedrate) + "\n"
        lines.append(string)
        if (i % 2 == 0):
            string = "G1 X" + str(x_max) + " F" + str(feedrate) + "\n"
            lines.append(string)
        elif (i % 2 == 1):
            string = "G1 X" + str(0) + " F" + str(feedrate) + "\n"
            lines.append(string)


def reverse_code(x_max, y_max, feedrate,line_width):
    lines.append("G21\n")
    lines.append("G90\n")
    lines.append(("G1 Z-0.2 F250\n"))
    for i in range(0, int(y_max/line_width), 1):
        string = "G1 Y" + str(-i*line_width) + " F" + str(feedrate) + "\n"
        lines.append(string)
        if (i % 2 == 0):
            string = "G1 X" + str(-x_max) + " F" + str(feedrate) + "\n"
            lines.append(string)
        elif (i % 2 == 1):
            string = "G1 X" + str(0) + " F" + str(feedrate) + "\n"
            lines.append(string)

def reverse_dir(x_max, y_max, feedrate,line_width):
    lines.append("G21\n")
    lines.append("G90\n")
    lines.append(("G1 Z-0.2 F250\n"))
    for i in range(0, int(x_max/line_width), 1):
        string = "G1 X" + str(i*line_width) + " F" + str(feedrate) + "\n"
        lines.append(string)
        if (i % 2 == 0):
            string = "G1 Y" + str(-y_max) + " F" + str(feedrate) + "\n"
            lines.append(string)
        elif (i % 2 == 1):
            string = "G1 Y" + str(0) + " F" + str(feedrate) + "\n"
            lines.append(string)



generate_code(220,220,750,1)


file = open("Bed_leveling.gcode", "w")

file.writelines(lines)
